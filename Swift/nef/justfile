_: just-choose

just-choose:
    #!/usr/bin/env sh
    choose_recipe=$(just --summary | tr ' ' '\n' | /usr/local/opt/choose-gui/bin/choose)
    echo "Choose Recipe: ${choose_recipe}"
    just "${choose_recipe}"

just-list:
    just --list

just-evaluate:
    just --evaluate

nef-help:
    nef --help

nef-version:
    nef version

markdown_output := "./markdown-output"
jekyll_output := "./jekyll-output"
carbon_output := "./carbon-output"
xcode_playground := "./xcode-playground"
transform_bowplayground := "./Transform-BowPlayground"

# Create ios

ios_bowplayground_dir := "./ios-BowPlayground"
ios_bowplayground_name := "IosBowPlayground"

# Create ios : 1 : Create by nef
nef-playground-ios:
    nef playground --output "{{ios_bowplayground_dir}}" --name "{{ios_bowplayground_name}}" --platform ios

# Create ios : 2 : Open by Xcode
open-playground-ios:
    open "{{ios_bowplayground_dir}}/{{ios_bowplayground_name}}.app"

# Create ios : 3 : Compile by nef
compile-playground-ios:
    nef compile --project "{{ios_bowplayground_dir}}/{{ios_bowplayground_name}}.app"
    du -d 3 -h "{{ios_bowplayground_dir}}/{{ios_bowplayground_name}}.app"

# Create ios : 4 : Clean by nef
clean-playground-ios:
    nef clean --project "{{ios_bowplayground_dir}}/{{ios_bowplayground_name}}.app"
    du -d 3 -h "{{ios_bowplayground_dir}}/{{ios_bowplayground_name}}.app"

# Create ios : 5 : Generate Markdown by nef
markdown-playground-ios:
    nef markdown --project "{{ios_bowplayground_dir}}/{{ios_bowplayground_name}}.app" --output "{{markdown_output}}"

# Create ios : 6 : Generate Jekyll by nef
jekyll-playground-ios:
    nef jekyll --project "{{ios_bowplayground_dir}}/{{ios_bowplayground_name}}.app" --output "{{jekyll_output}}/{{ios_bowplayground_name}}"

# Create ios : clean PlayGround
trash-playground-ios:
    trash "{{ios_bowplayground_dir}}/{{ios_bowplayground_name}}.app"

# Create ios : clean Markdown
trash-playground-ios-markdown:
    trash "{{markdown_output}}/$(echo {{ios_bowplayground_name}} | tr [A-Z] [a-z])"

# Create ios : clean Jekyll
trash-playground-ios-jekyll:
    trash "{{jekyll_output}}/{{ios_bowplayground_name}}"

# Create macos

macos_bowplayground_dir := "./macos-BowPlayground"
macos_bowplayground_name := "MacosBowPlayground"

# Create macos : 1 : Create by nef
nef-playground-macos:
    nef playground --output "{{macos_bowplayground_dir}}" --name "{{macos_bowplayground_name}}" --platform macos

# Create macos : 2 : Open by Xcode
open-playground-macos:
    open "{{macos_bowplayground_dir}}/{{macos_bowplayground_name}}.app"

# Create macos : 3 : Compile by nef
compile-playground-macos:
    nef compile --project "{{macos_bowplayground_dir}}/{{macos_bowplayground_name}}.app"
    du -d 3 -h "{{macos_bowplayground_dir}}/{{macos_bowplayground_name}}.app"

# Create macos : 4 : Clean by nef
clean-playground-macos:
    nef clean --project "{{ios_bowplayground_dir}}/{{macos_bowplayground_name}}.app"
    du -d 3 -h "{{macos_bowplayground_dir}}/{{macos_bowplayground_name}}.app"

# Create macos : 5 : Generate Markdown by nef
markdown-playground-macos:
    nef markdown --project "{{macos_bowplayground_dir}}/{{macos_bowplayground_name}}.app" --output "{{markdown_output}}"

# Create macos : 6 : Generate Jekyll by nef
jekyll-playground-macos:
    nef jekyll --project "{{macos_bowplayground_dir}}/{{macos_bowplayground_name}}.app" --output "{{jekyll_output}}/{{macos_bowplayground_name}}"

# Create macos : Clean PlayGround
trash-playground-macos:
    trash "{{macos_bowplayground_dir}}/{{macos_bowplayground_name}}.app"

# Create macos : Clean Markdown
trash-playground-macos-markdown:
    trash "{{markdown_output}}/$(echo {{macos_bowplayground_name}} | tr [A-Z] [a-z])"

# Create macos : clean Jekyll
trash-playground-macos-jekyll:
    trash "{{jekyll_output}}/{{macos_bowplayground_name}}"

# macOS Blank

macos_blank_playground_dir := "macOS-Blank.playground"
macos_blank_bowplayground_name := "MacosBlank"

# macOS Blank : 1 : Open PlayGround by Xcode
open-xcode-playground-macOS-Blank:
    open "{{xcode_playground}}/{{macos_blank_playground_dir}}"

# macOS Blank : 2 : Transform PlayGround by nef
nef-playground-transform-macOS-Blank:
    nef playground --playground "{{xcode_playground}}/{{macos_blank_playground_dir}}" --output "{{transform_bowplayground}}" --name "{{macos_blank_bowplayground_name}}" --platform macos

# macOS Blank : 3 : Open Transformed PlayGround by Xcode
open-transformed-playground-macOS-Blank:
    open "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app"

# macOS Blank : 4 : Compile Transformed PlayGround by nef
compile-transformed-playground-macOS-Blank:
    nef compile --project "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app"
    du -d 3 -h "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app"

# macOS Blank : 5 : Clean by nef
clean-transformed-playground-macOS-Blank:
    nef clean --project "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app"
    du -d 3 -h "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app"

# macOS Blank : 6 : Render Markdown for Transformed PlayGround by nef
markdown-transformed-playground-macOS-Blank:
    nef markdown --project "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app" --output "{{markdown_output}}"

# macOS Blank : 7 : Render Jekyll for Transformed PlayGround by nef
jekyll-transformed-playground-macOS-Blank:
    nef jekyll --project "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app" --output "{{jekyll_output}}/{{macos_blank_bowplayground_name}}"

# macOS Blank : 8 : Render Carbon for Transformed PlayGround by nef
carbon-transformed-playground-macOS-Blank:
    nef carbon --project "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app" --output "{{carbon_output}}"

# macOS Blank : Clean Transformed PlayGround
trash-transformed-playground-macOS-Blank:
    trash "{{transform_bowplayground}}/{{macos_blank_bowplayground_name}}.app"

# macOS Blank : Clean Markdown
trash-transformed-playground-macOS-Blank-markdown:
    trash "{{markdown_output}}/$(echo {{macos_blank_bowplayground_name}} | tr [A-Z] [a-z])"

# macOS Blank : clean Jekyll
trash-transformed-playground-macOS-Blank-jekyll:
    trash "{{jekyll_output}}/{{macos_blank_bowplayground_name}}"

# macOS Blank : clean Carbon
trash-transformed-playground-macOS-Blank-carbon:
    trash "{{carbon_output}}/$(echo {{macos_blank_bowplayground_name}} | tr [A-Z] [a-z])"

# macOS Game

macos_game_playground_dir := "macOS-Game.playground"
macos_game_bowplayground_name := "MacosGame"

# macOS Game : 1 : Open PlayGround by Xcode
open-xcode-playground-macOS-Game:
    open "{{xcode_playground}}/{{macos_game_playground_dir}}"

# macOS Game : 2 : Transform PlayGround by nef
nef-playground-transform-macOS-Game:
    nef playground --playground "{{xcode_playground}}/{{macos_game_playground_dir}}" --output "{{transform_bowplayground}}" --name "{{macos_game_bowplayground_name}}" --platform macos

# macOS Game : 3 : Open Transformed PlayGround by Xcode
open-transformed-playground-macOS-Game:
    open "{{transform_bowplayground}}/{{macos_game_bowplayground_name}}.app"

# macOS Game : 4 : Render Markdown for Transformed PlayGround by nef
markdown-transformed-playground-macOS-Game:
    nef markdown --project "{{transform_bowplayground}}/{{macos_game_bowplayground_name}}.app" --output "{{markdown_output}}"

# macOS Game : 5 : Render Jekyll for Transformed PlayGround by nef
jekyll-transformed-playground-macOS-Game:
    nef jekyll --project "{{transform_bowplayground}}/{{macos_game_bowplayground_name}}.app" --output "{{jekyll_output}}/{{macos_game_bowplayground_name}}"

# macOS Game : 6 : Render Carbon for Transformed PlayGround by nef
carbon-transformed-playground-macOS-Game:
    nef carbon --project "{{transform_bowplayground}}/{{macos_game_bowplayground_name}}.app" --output "{{carbon_output}}"

# macOS Game : Clean Transformed PlayGround
trash-transformed-playground-macOS-Game:
    trash "{{transform_bowplayground}}/{{macos_game_bowplayground_name}}.app"

# macOS Game : Clean Markdown
trash-transformed-playground-macOS-Game-markdown:
    trash "{{markdown_output}}/$(echo {{macos_game_bowplayground_name}} | tr [A-Z] [a-z])"

# macOS Game : clean Jekyll
trash-transformed-playground-macOS-Game-jekyll:
    trash "{{jekyll_output}}/{{macos_game_bowplayground_name}}"

# macOS Game : clean Carbon
trash-transformed-playground-macOS-Game-carbon:
    trash "{{carbon_output}}/$(echo {{macos_game_bowplayground_name}} | tr [A-Z] [a-z])"

# macOS Map

macos_map_playground_dir := "macOS-Map.playground"
macos_map_bowplayground_name := "MacosMap"

# macOS Map : 1 : Open PlayGround by Xcode
open-xcode-playground-macOS-Map:
    open "{{xcode_playground}}/{{macos_map_playground_dir}}"

# macOS Map : 2 : Transform PlayGround by nef
nef-playground-transform-macOS-Map:
    nef playground --playground "{{xcode_playground}}/{{macos_map_playground_dir}}" --output "{{transform_bowplayground}}" --name "{{macos_map_bowplayground_name}}" --platform macos

# macOS Map : 3 : Open Transformed PlayGround by Xcode
open-transformed-playground-macOS-Map:
    open "{{transform_bowplayground}}/{{macos_map_bowplayground_name}}.app"

# macOS Map : 4 : Render Markdown for Transformed PlayGround by nef
markdown-transformed-playground-macOS-Map:
    nef markdown --project "{{transform_bowplayground}}/{{macos_map_bowplayground_name}}.app" --output "{{markdown_output}}"

# macOS Map : 5 : Render Jekyll for Transformed PlayGround by nef
jekyll-transformed-playground-macOS-Map:
    nef jekyll --project "{{transform_bowplayground}}/{{macos_map_bowplayground_name}}.app" --output "{{jekyll_output}}/{{macos_map_bowplayground_name}}"

# macOS Map : Clean Transformed PlayGround
trash-transformed-playground-macOS-Map:
    trash "{{transform_bowplayground}}/{{macos_map_bowplayground_name}}.app"

# macOS Map : Clean Markdown
trash-transformed-playground-macOS-Map-markdown:
    trash "{{markdown_output}}/$(echo {{macos_map_bowplayground_name}} | tr [A-Z] [a-z])"

# macOS Map : clean Jekyll
trash-transformed-playground-macOS-Map-jekyll:
    trash "{{jekyll_output}}/{{macos_map_bowplayground_name}}"

# macOS Single View

macos_singleview_playground_dir := "macOS-SingleView.playground"
macos_singleview_bowplayground_name := "MacosSingleView"

# macOS Single View : 1 : Open PlayGround by Xcode
open-xcode-playground-macOS-SingleView:
    open "{{xcode_playground}}/{{macos_singleview_playground_dir}}"

# macOS Single View : 2 : Transform PlayGround by nef
nef-playground-transform-macOS-SingleView:
    nef playground --playground "{{xcode_playground}}/{{macos_singleview_playground_dir}}" --output "{{transform_bowplayground}}" --name "{{macos_singleview_bowplayground_name}}" --platform macos

# macOS Single View : 3 : Open Transformed PlayGround by Xcode
open-transformed-playground-macOS-SingleView:
    open "{{transform_bowplayground}}/{{macos_singleview_bowplayground_name}}.app"

# macOS Single View : 4 : Render Markdown for Transformed PlayGround by nef
markdown-transformed-playground-macOS-SingleView:
    nef markdown --project "{{transform_bowplayground}}/{{macos_singleview_bowplayground_name}}.app" --output "{{markdown_output}}"

# macOS Single View : 5 : Render Jekyll for Transformed PlayGround by nef
jekyll-transformed-playground-macOS-SingleView:
    nef jekyll --project "{{transform_bowplayground}}/{{macos_singleview_bowplayground_name}}.app" --output "{{jekyll_output}}/{{macos_singleview_bowplayground_name}}"

# macOS Single View : Clean Transformed PlayGround
trash-transformed-playground-macOS-SingleView:
    trash "{{transform_bowplayground}}/{{macos_singleview_bowplayground_name}}.app"

# macOS Single View : Clean Markdown
trash-transformed-playground-macOS-SingleView-markdown:
    trash "{{markdown_output}}/$(echo {{macos_singleview_bowplayground_name}} | tr [A-Z] [a-z])"

# macOS Single View : clean Jekyll
trash-transformed-playground-macOS-SingleView-jekyll:
    trash "{{jekyll_output}}/{{macos_singleview_bowplayground_name}}"

# iOS Blank

ios_blank_playground_dir := "iOS-Blank.playground"
ios_blank_bowplayground_name := "IosBlank"

# iOS Blank : 1 : Open PlayGround by Xcode
open-xcode-playground-iOS-Blank:
    open "{{xcode_playground}}/{{ios_blank_playground_dir}}"

# iOS Blank : 2 : Transform PlayGround by nef
nef-playground-transform-iOS-Blank:
    nef playground --playground "{{xcode_playground}}/{{ios_blank_playground_dir}}" --output "{{transform_bowplayground}}" --name "{{ios_blank_bowplayground_name}}" --platform ios

# iOS Blank : 3 : Open Transformed PlayGround by Xcode
open-transformed-playground-iOS-Blank:
    open "{{transform_bowplayground}}/{{ios_blank_bowplayground_name}}.app"

# iOS Blank : 4 : Compile Transformed PlayGround by nef
compile-transformed-playground-iOS-Blank:
    nef compile --project "{{transform_bowplayground}}/{{ios_blank_bowplayground_name}}.app"
    du -d 3 -h "{{transform_bowplayground}}/{{ios_blank_bowplayground_name}}.app"

# iOS Blank : 5 : Clean by nef
clean-transformed-playground-iOS-Blank:
    nef clean --project "{{transform_bowplayground}}/{{ios_blank_bowplayground_name}}.app"
    du -d 3 -h "{{transform_bowplayground}}/{{ios_blank_bowplayground_name}}.app"

# iOS Blank : 6 : Render Markdown for Transformed PlayGround by nef
markdown-transformed-playground-iOS-Blank:
    nef markdown --project "{{transform_bowplayground}}/{{ios_blank_bowplayground_name}}.app" --output "{{markdown_output}}"

# iOS Blank : 7 : Render Jekyll for Transformed PlayGround by nef
jekyll-transformed-playground-iOS-Blank:
    nef jekyll --project "{{transform_bowplayground}}/{{ios_blank_bowplayground_name}}.app" --output "{{jekyll_output}}/{{ios_blank_bowplayground_name}}"

# iOS Blank : Clean Transformed PlayGround
trash-transformed-playground-iOS-Blank:
    trash "{{transform_bowplayground}}/{{ios_blank_bowplayground_name}}.app"

# iOS Blank : Clean Markdown
trash-transformed-playground-iOS-Blank-markdown:
    trash "{{markdown_output}}/$(echo {{ios_blank_bowplayground_name}} | tr [A-Z] [a-z])"

# iOS Blank : clean Jekyll
trash-transformed-playground-iOS-Blank-jekyll:
    trash "{{jekyll_output}}/{{ios_blank_bowplayground_name}}"

# iOS Game

ios_game_playground_dir := "iOS-Game.playground"
ios_game_bowplayground_name := "IosGame"

# iOS Game : 1 : Open PlayGround by Xcode
open-xcode-playground-iOS-Game:
    open "{{xcode_playground}}/{{ios_game_playground_dir}}"

# iOS Game : 2 : Transform PlayGround by nef
nef-playground-transform-iOS-Game:
    nef playground --playground "{{xcode_playground}}/{{ios_game_playground_dir}}" --output "{{transform_bowplayground}}" --name "{{ios_game_bowplayground_name}}" --platform ios

# iOS Game : 3 : Open Transformed PlayGround by Xcode
open-transformed-playground-iOS-Game:
    open "{{transform_bowplayground}}/{{ios_game_bowplayground_name}}.app"

# iOS Game : 4 : Render Markdown for Transformed PlayGround by nef
markdown-transformed-playground-iOS-Game:
    nef markdown --project "{{transform_bowplayground}}/{{ios_game_bowplayground_name}}.app" --output "{{markdown_output}}"

# iOS Game : 5 : Render Jekyll for Transformed PlayGround by nef
jekyll-transformed-playground-iOS-Game:
    nef jekyll --project "{{transform_bowplayground}}/{{ios_game_bowplayground_name}}.app" --output "{{jekyll_output}}/{{ios_game_bowplayground_name}}"

# iOS Game : Clean Transformed PlayGround
trash-transformed-playground-iOS-Game:
    trash "{{transform_bowplayground}}/{{ios_game_bowplayground_name}}.app"

# iOS Game : Clean Markdown
trash-transformed-playground-iOS-Game-markdown:
    trash "{{markdown_output}}/$(echo {{ios_game_bowplayground_name}} | tr [A-Z] [a-z])"

# iOS Game : clean Jekyll
trash-transformed-playground-iOS-Game-jekyll:
    trash "{{jekyll_output}}/{{ios_game_bowplayground_name}}"

# iOS Map

ios_map_playground_dir := "iOS-Map.playground"
ios_map_bowplayground_name := "IosMap"

# iOS Map : 1 : Open PlayGround by Xcode
open-xcode-playground-iOS-Map:
    open "{{xcode_playground}}/{{ios_map_playground_dir}}"

# iOS Map : 2 : Transform PlayGround by nef
nef-playground-transform-iOS-Map:
    nef playground --playground "{{xcode_playground}}/{{ios_map_playground_dir}}" --output "{{transform_bowplayground}}" --name "{{ios_map_bowplayground_name}}" --platform ios

# iOS Map : 3 : Open Transformed PlayGround by Xcode
open-transformed-playground-iOS-Map:
    open "{{transform_bowplayground}}/{{ios_map_bowplayground_name}}.app"

# iOS Map : 4 : Render Markdown for Transformed PlayGround by nef
markdown-transformed-playground-iOS-Map:
    nef markdown --project "{{transform_bowplayground}}/{{ios_map_bowplayground_name}}.app" --output "{{markdown_output}}"

# iOS Map : 5 : Render Jekyll for Transformed PlayGround by nef
jekyll-transformed-playground-iOS-Map:
    nef jekyll --project "{{transform_bowplayground}}/{{ios_map_bowplayground_name}}.app" --output "{{jekyll_output}}/{{ios_map_bowplayground_name}}"

# iOS Map : Clean Transformed PlayGround
trash-transformed-playground-iOS-Map:
    trash "{{transform_bowplayground}}/{{ios_map_bowplayground_name}}.app"

# iOS Map : Clean Markdown
trash-transformed-playground-iOS-Map-markdown:
    trash "{{markdown_output}}/$(echo {{ios_map_bowplayground_name}} | tr [A-Z] [a-z])"

# iOS Map : clean Jekyll
trash-transformed-playground-iOS-Map-jekyll:
    trash "{{jekyll_output}}/{{ios_map_bowplayground_name}}"

# iOS Single View

ios_singleview_playground_dir := "iOS-SingleView.playground"
ios_singleview_bowplayground_name := "IosSingleView"

# iOS Single View : 1 : Open PlayGround by Xcode
open-xcode-playground-iOS-SingleView:
    open "{{xcode_playground}}/{{ios_singleview_playground_dir}}"

# iOS Single View : 2 : Transform PlayGround by nef
nef-playground-transform-iOS-SingleView:
    nef playground --playground "{{xcode_playground}}/{{ios_singleview_playground_dir}}" --output "{{transform_bowplayground}}" --name "{{ios_singleview_bowplayground_name}}" --platform ios

# iOS Single View : 3 : Open Transformed PlayGround by Xcode
open-transformed-playground-iOS-SingleView:
    open "{{transform_bowplayground}}/{{ios_singleview_bowplayground_name}}.app"

# iOS Single View : 4 : Render Markdown for Transformed PlayGround by nef
markdown-transformed-playground-iOS-SingleView:
    nef markdown --project "{{transform_bowplayground}}/{{ios_singleview_bowplayground_name}}.app" --output "{{markdown_output}}"

# iOS Single View : 5 : Render Jekyll for Transformed PlayGround by nef
jekyll-transformed-playground-iOS-SingleView:
    nef jekyll --project "{{transform_bowplayground}}/{{ios_singleview_bowplayground_name}}.app" --output "{{jekyll_output}}/{{ios_singleview_bowplayground_name}}"

# iOS Single View : Clean Transformed PlayGround
trash-transformed-playground-iOS-SingleView:
    trash "{{transform_bowplayground}}/{{ios_singleview_bowplayground_name}}.app"

# iOS Single View : Clean Markdown
trash-transformed-playground-iOS-SingleView-markdown:
    trash "{{markdown_output}}/$(echo {{ios_singleview_bowplayground_name}} | tr [A-Z] [a-z])"

# iOS Single View  : clean Jekyll
trash-transformed-playground-iOS-SingleView-jekyll:
    trash "{{jekyll_output}}/{{ios_singleview_bowplayground_name}}"

# PlayGround Book

# PlayGround Book : 1 : Create by nef
nef-ipad:
    nef ipad --name "PlayGroundBookName" --package "./ipad-package-description/Package.swift" --output "./ipad-output"

# PlayGround Book : 2 : Open
open-playground-book:
    open "./ipad-output/PlayGroundBookName/PlayGroundBookName.playgroundbook"

# PlayGround Book : Clean PlayGround Book
trash-playground-book:
    trash "./ipad-output/PlayGroundBookName/"